// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#include "request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_request_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_request_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_RowkeyVersionEntry_DoNotUse;
}  // namespace protobuf_request_2eproto
namespace PennCloud {
class Request_RowkeyVersionEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_RowkeyVersionEntry_DoNotUse>
      _instance;
} _Request_RowkeyVersionEntry_DoNotUse_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
}  // namespace PennCloud
namespace protobuf_request_2eproto {
static void InitDefaultsRequest_RowkeyVersionEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PennCloud::_Request_RowkeyVersionEntry_DoNotUse_default_instance_;
    new (ptr) ::PennCloud::Request_RowkeyVersionEntry_DoNotUse();
  }
  ::PennCloud::Request_RowkeyVersionEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_RowkeyVersionEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_RowkeyVersionEntry_DoNotUse}, {}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PennCloud::_Request_default_instance_;
    new (ptr) ::PennCloud::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PennCloud::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequest}, {
      &protobuf_request_2eproto::scc_info_Request_RowkeyVersionEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request_RowkeyVersionEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request_RowkeyVersionEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request_RowkeyVersionEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request_RowkeyVersionEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request_RowkeyVersionEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, rowkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, columnkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, isserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, sender_server_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, uniqueid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, preprocessed_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, sequence_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, new_primary_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, modified_server_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PennCloud::Request, rowkey_version_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::PennCloud::Request_RowkeyVersionEntry_DoNotUse)},
  { 9, 28, sizeof(::PennCloud::Request)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::PennCloud::_Request_RowkeyVersionEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PennCloud::_Request_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "request.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rrequest.proto\022\tPennCloud\"\223\003\n\007Request\022\014"
      "\n\004type\030\001 \002(\t\022\016\n\006rowkey\030\002 \001(\t\022\021\n\tcolumnke"
      "y\030\003 \001(\t\022\016\n\006value1\030\004 \001(\014\022\016\n\006value2\030\005 \001(\014\022"
      "\017\n\007command\030\006 \001(\t\022\020\n\010isServer\030\007 \001(\t\022\033\n\023se"
      "nder_server_index\030\010 \001(\t\022\020\n\010uniqueid\030\t \001("
      "\t\022\035\n\025preprocessed_response\030\n \001(\t\022\027\n\017sequ"
      "ence_number\030\013 \001(\t\022\031\n\021new_primary_index\030\014"
      " \001(\t\022\035\n\025modified_server_index\030\r \001(\t\022=\n\016r"
      "owkey_version\030\016 \003(\0132%.PennCloud.Request."
      "RowkeyVersionEntry\0324\n\022RowkeyVersionEntry"
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 432);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "request.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_request_2eproto
namespace PennCloud {

// ===================================================================

Request_RowkeyVersionEntry_DoNotUse::Request_RowkeyVersionEntry_DoNotUse() {}
Request_RowkeyVersionEntry_DoNotUse::Request_RowkeyVersionEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Request_RowkeyVersionEntry_DoNotUse::MergeFrom(const Request_RowkeyVersionEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Request_RowkeyVersionEntry_DoNotUse::GetMetadata() const {
  ::protobuf_request_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_request_2eproto::file_level_metadata[0];
}
void Request_RowkeyVersionEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kTypeFieldNumber;
const int Request::kRowkeyFieldNumber;
const int Request::kColumnkeyFieldNumber;
const int Request::kValue1FieldNumber;
const int Request::kValue2FieldNumber;
const int Request::kCommandFieldNumber;
const int Request::kIsServerFieldNumber;
const int Request::kSenderServerIndexFieldNumber;
const int Request::kUniqueidFieldNumber;
const int Request::kPreprocessedResponseFieldNumber;
const int Request::kSequenceNumberFieldNumber;
const int Request::kNewPrimaryIndexFieldNumber;
const int Request::kModifiedServerIndexFieldNumber;
const int Request::kRowkeyVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_request_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PennCloud.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rowkey_version_.MergeFrom(from.rowkey_version_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  rowkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rowkey()) {
    rowkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rowkey_);
  }
  columnkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_columnkey()) {
    columnkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnkey_);
  }
  value1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value1()) {
    value1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value1_);
  }
  value2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value2()) {
    value2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value2_);
  }
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command()) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  isserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_isserver()) {
    isserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isserver_);
  }
  sender_server_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sender_server_index()) {
    sender_server_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_server_index_);
  }
  uniqueid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uniqueid()) {
    uniqueid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uniqueid_);
  }
  preprocessed_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preprocessed_response()) {
    preprocessed_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preprocessed_response_);
  }
  sequence_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sequence_number()) {
    sequence_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_number_);
  }
  new_primary_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_primary_index()) {
    new_primary_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_primary_index_);
  }
  modified_server_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_modified_server_index()) {
    modified_server_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_server_index_);
  }
  // @@protoc_insertion_point(copy_constructor:PennCloud.Request)
}

void Request::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rowkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_server_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uniqueid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preprocessed_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_primary_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_server_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:PennCloud.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rowkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isserver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_server_index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uniqueid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preprocessed_response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_primary_index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_server_index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_request_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_request_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_request_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:PennCloud.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rowkey_version_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      rowkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      columnkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      value1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      value2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      command_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      isserver_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      sender_server_index_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      uniqueid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      preprocessed_response_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      sequence_number_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      new_primary_index_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      modified_server_index_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PennCloud.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rowkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rowkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rowkey().data(), static_cast<int>(this->rowkey().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.rowkey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string columnkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_columnkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->columnkey().data(), static_cast<int>(this->columnkey().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.columnkey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string command = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string isServer = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isserver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->isserver().data(), static_cast<int>(this->isserver().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.isServer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sender_server_index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_server_index()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_server_index().data(), static_cast<int>(this->sender_server_index().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.sender_server_index");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string uniqueid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uniqueid().data(), static_cast<int>(this->uniqueid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.uniqueid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preprocessed_response = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preprocessed_response()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preprocessed_response().data(), static_cast<int>(this->preprocessed_response().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.preprocessed_response");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sequence_number = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sequence_number().data(), static_cast<int>(this->sequence_number().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.sequence_number");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string new_primary_index = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_primary_index()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_primary_index().data(), static_cast<int>(this->new_primary_index().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.new_primary_index");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string modified_server_index = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modified_server_index()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->modified_server_index().data(), static_cast<int>(this->modified_server_index().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.modified_server_index");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int32> rowkey_version = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          Request_RowkeyVersionEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Request_RowkeyVersionEntry_DoNotUse,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&rowkey_version_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PennCloud.Request.RowkeyVersionEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PennCloud.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PennCloud.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PennCloud.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string rowkey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rowkey().data(), static_cast<int>(this->rowkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.rowkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rowkey(), output);
  }

  // optional string columnkey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->columnkey().data(), static_cast<int>(this->columnkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.columnkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->columnkey(), output);
  }

  // optional bytes value1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->value1(), output);
  }

  // optional bytes value2 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->value2(), output);
  }

  // optional string command = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->command(), output);
  }

  // optional string isServer = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->isserver().data(), static_cast<int>(this->isserver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.isServer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->isserver(), output);
  }

  // optional string sender_server_index = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_server_index().data(), static_cast<int>(this->sender_server_index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.sender_server_index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sender_server_index(), output);
  }

  // optional string uniqueid = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uniqueid().data(), static_cast<int>(this->uniqueid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.uniqueid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->uniqueid(), output);
  }

  // optional string preprocessed_response = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preprocessed_response().data(), static_cast<int>(this->preprocessed_response().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.preprocessed_response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->preprocessed_response(), output);
  }

  // optional string sequence_number = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequence_number().data(), static_cast<int>(this->sequence_number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.sequence_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sequence_number(), output);
  }

  // optional string new_primary_index = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_primary_index().data(), static_cast<int>(this->new_primary_index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.new_primary_index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->new_primary_index(), output);
  }

  // optional string modified_server_index = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modified_server_index().data(), static_cast<int>(this->modified_server_index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.modified_server_index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->modified_server_index(), output);
  }

  // map<string, int32> rowkey_version = 14;
  if (!this->rowkey_version().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "PennCloud.Request.RowkeyVersionEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->rowkey_version().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->rowkey_version().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->rowkey_version().begin();
          it != this->rowkey_version().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Request_RowkeyVersionEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(rowkey_version_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            14, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Request_RowkeyVersionEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->rowkey_version().begin();
          it != this->rowkey_version().end(); ++it) {
        entry.reset(rowkey_version_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            14, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PennCloud.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PennCloud.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string rowkey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rowkey().data(), static_cast<int>(this->rowkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.rowkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rowkey(), target);
  }

  // optional string columnkey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->columnkey().data(), static_cast<int>(this->columnkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.columnkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->columnkey(), target);
  }

  // optional bytes value1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->value1(), target);
  }

  // optional bytes value2 = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->value2(), target);
  }

  // optional string command = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->command(), target);
  }

  // optional string isServer = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->isserver().data(), static_cast<int>(this->isserver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.isServer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->isserver(), target);
  }

  // optional string sender_server_index = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_server_index().data(), static_cast<int>(this->sender_server_index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.sender_server_index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sender_server_index(), target);
  }

  // optional string uniqueid = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uniqueid().data(), static_cast<int>(this->uniqueid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.uniqueid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->uniqueid(), target);
  }

  // optional string preprocessed_response = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preprocessed_response().data(), static_cast<int>(this->preprocessed_response().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.preprocessed_response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->preprocessed_response(), target);
  }

  // optional string sequence_number = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequence_number().data(), static_cast<int>(this->sequence_number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.sequence_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sequence_number(), target);
  }

  // optional string new_primary_index = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_primary_index().data(), static_cast<int>(this->new_primary_index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.new_primary_index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->new_primary_index(), target);
  }

  // optional string modified_server_index = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modified_server_index().data(), static_cast<int>(this->modified_server_index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PennCloud.Request.modified_server_index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->modified_server_index(), target);
  }

  // map<string, int32> rowkey_version = 14;
  if (!this->rowkey_version().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "PennCloud.Request.RowkeyVersionEntry.key");
      }
    };

    if (deterministic &&
        this->rowkey_version().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->rowkey_version().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->rowkey_version().begin();
          it != this->rowkey_version().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Request_RowkeyVersionEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(rowkey_version_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       14, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Request_RowkeyVersionEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->rowkey_version().begin();
          it != this->rowkey_version().end(); ++it) {
        entry.reset(rowkey_version_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       14, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PennCloud.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PennCloud.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }
  // map<string, int32> rowkey_version = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rowkey_version_size());
  {
    ::std::unique_ptr<Request_RowkeyVersionEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->rowkey_version().begin();
        it != this->rowkey_version().end(); ++it) {
      entry.reset(rowkey_version_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 254u) {
    // optional string rowkey = 2;
    if (has_rowkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rowkey());
    }

    // optional string columnkey = 3;
    if (has_columnkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->columnkey());
    }

    // optional bytes value1 = 4;
    if (has_value1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value1());
    }

    // optional bytes value2 = 5;
    if (has_value2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value2());
    }

    // optional string command = 6;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command());
    }

    // optional string isServer = 7;
    if (has_isserver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->isserver());
    }

    // optional string sender_server_index = 8;
    if (has_sender_server_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_server_index());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional string uniqueid = 9;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // optional string preprocessed_response = 10;
    if (has_preprocessed_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preprocessed_response());
    }

    // optional string sequence_number = 11;
    if (has_sequence_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequence_number());
    }

    // optional string new_primary_index = 12;
    if (has_new_primary_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_primary_index());
    }

    // optional string modified_server_index = 13;
    if (has_modified_server_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modified_server_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PennCloud.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PennCloud.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PennCloud.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PennCloud.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rowkey_version_.MergeFrom(from.rowkey_version_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_rowkey();
      rowkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rowkey_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_columnkey();
      columnkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnkey_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_value1();
      value1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value1_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_value2();
      value2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value2_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_command();
      command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_isserver();
      isserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isserver_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_sender_server_index();
      sender_server_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_server_index_);
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_uniqueid();
      uniqueid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uniqueid_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_preprocessed_response();
      preprocessed_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preprocessed_response_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_sequence_number();
      sequence_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_number_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_new_primary_index();
      new_primary_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_primary_index_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_modified_server_index();
      modified_server_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_server_index_);
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PennCloud.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PennCloud.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  rowkey_version_.Swap(&other->rowkey_version_);
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rowkey_.Swap(&other->rowkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  columnkey_.Swap(&other->columnkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value1_.Swap(&other->value1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value2_.Swap(&other->value2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  isserver_.Swap(&other->isserver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sender_server_index_.Swap(&other->sender_server_index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uniqueid_.Swap(&other->uniqueid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preprocessed_response_.Swap(&other->preprocessed_response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sequence_number_.Swap(&other->sequence_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_primary_index_.Swap(&other->new_primary_index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modified_server_index_.Swap(&other->modified_server_index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_request_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_request_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PennCloud
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PennCloud::Request_RowkeyVersionEntry_DoNotUse* Arena::CreateMaybeMessage< ::PennCloud::Request_RowkeyVersionEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::PennCloud::Request_RowkeyVersionEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PennCloud::Request* Arena::CreateMaybeMessage< ::PennCloud::Request >(Arena* arena) {
  return Arena::CreateInternal< ::PennCloud::Request >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
